import EmailSender
import Transactions
import random
import sqlite3
from io import StringIO
from cryptography.fernet import Fernet
# main Global Currencies (Yen, USD, EU, Pounds)
db = sqlite3.connect('data.db')
conn = db.cursor()


# main exchange rates (Yen, USD, EU, Pounds)

def Curr_exchange():
    name = input("please enter the full name your account is in: ")
    Crypt = input("please enter last Six Digits of your DCL: ")
    data_current = conn.execute("SELECT name, Pin FROM customers WHERE DCL Like '%?%'", [Crypt])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])
        print("Current = ", x[2])
        print("Saving = ", x[3])
        print("Currency = ", x[4])

    print("which currency would you like to use today")
    print("(1). USD")
    print("(2). EUR")
    print("(3). GBP")
    print("(4). AUS")
    print("(5). CNY")
    print("(6). JPY")
    curr = input()
    if curr == "1":
        Transactions.get_CurrencyExchange_USD(name)
    if curr == "2":
        Transactions.get_CurrencyExchange_EUR(name)
    if curr == "3":
        Transactions.get_CurrencyExchange_GBP(name)
    if curr == "4":
        Transactions.get_CurrencyExchange_AUS(name)
    if curr == "5":
        Transactions.get_CurrencyExchange_CNY(name)
    if curr == "6":
        Transactions.get_CurrencyExchange_JPY(name)

    print("You're exchange has been completed. Enjoy!!! ")
    intro()


def atm():
    name = input("please enter the full name your account is in: ")
    Crypt = input("please enter last Six Digits of your DCL: ")
    data_current = conn.execute("SELECT name, Pin FROM customers WHERE DCL Like '%?%'", [Crypt])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])

    print("choose an account to withdraw from: ")
    print("(1). Checking")
    print("(2). Savings")
    print("(3). exit")

    var = input()

    if var == "1":
        dep = int(input("How much would you like to withdraw today: "))
        print("You will be charged 1.3% upon withdrawal")
        rate_r = dep * 0.013
        Transactions.use_atm_Checking(name, dep, rate_r)
        print("Money withdrawn, have a great day!")

    if var == "2":
        dep = int(input("How much would you like to withdraw today: "))
        print("You will be charged 1.3% upon withdrawal")
        rate_r = dep * 0.013
        Transactions.use_atm_Savings(name, dep, rate_r)
        print("Money withdrawn, have a great day!")

    if var == "3":
        intro()


def new_pin():
    name = input("please enter the full name your account is in: ")
    email = input("please enter the email your account is in: ")
    data_current = conn.execute(
        'SELECT name, Type, email, Current, Saving, Address, Country FROM InovClients WHERE email=?',
        [name])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])
        print("Current Balance = ", x[2])
        print("Saving Balance = ", x[3])
        print("Address = ", x[4])
        print("Country = ", x[5])

    new_p = random.randint(1111, 9999)
    Transactions.get_new_pin(email, new_p)
    intro()


def transactions():
    name = input("please enter the full name your account is in: ")
    Crypt = input("please enter last Six Digits of your DCL: ")
    data_current = conn.execute("SELECT name, Pin FROM customers WHERE DCL Like '%?%'", [Crypt])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])
        print("Current Balance = ", x[2])
        print("Saving Balance = ", x[3])

    print("Will you be making an International transfer today: ")
    print("(1).Yes")
    print("(2).No")
    ans = input()

    if ans == "1":
        print()
    if ans == "2":
        name2 = input("what is the email of the person you'll be transferring money to: ")
        trans = int(input("how much will you sending today: "))
        Transactions.send_money(trans, name, name2)
        EmailSender.send_mail_for_Transactions(name, name2)
        print("transfer made")
        intro()


def Loan():
    name = input("please enter the full name your account is in: ")
    email = input("please enter the email your account is in: ")
    Crypt = input("please enter last Six Digits of your DCL: ")
    data_current = conn.execute("SELECT name, Pin FROM customers WHERE DCL Like '%?%'", [Crypt])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])
        print("Current Balance = ", x[2])
        print("Saving Balance = ", x[3])
        print("Address = ", x[4])
        print("Country = ", x[5])

    print("please choose loan")
    print("========== (1). Business ==========")
    print("========== (2). Personal ==========")
    ans = input()

    if ans == "1":
        print("Business loans are given at an interest rate of 3% to 7%")
        print("Loans amount for businesses range from 10,000 - 550,000")
        Business_loan = int(input("please enter loan amount: "))
        if Business_loan == 100000:
            r = 0.03
            n = 12
            p = Business_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted, you will be paying {} monthly over a 12 month period"
            print(result.format(p))
        if 100000 > Business_loan <= 250000:
            r = 0.05
            n = 36
            p = Business_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted, you will be paying {} monthly over a 36 month period"
            print(result.format(p))
        if 250000 > Business_loan <= 550000:
            r = 0.07
            n = 60
            p = Business_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted, you will be paying {} monthly over a 60 month period"
            print(result.format(p))

        print("Where would you like to deposit this loan")
        print("========== (1). Current ==========")
        print("========== (2). Savings ==========")
        choice = input()
        if choice == "1":
            Transactions.get_businessloan_checking(Business_loan, name)
        if choice == "2":
            Transactions.get_businessloan_savings(Business_loan, name)

        EmailSender.send_mail_for_business_loan(Business_loan, email, choice)

    if ans == "2":
        print("Personal loans are given at an interest rate of 1.5%")
        print("Loan amounts for range from 5,000 - 100,000")
        personal_loan = int(input("please enter loan amount: "))
        if personal_loan == 5000:
            r = 0.015
            n = 12
            p = personal_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted Monetary Transatlantic, you will be paying {} monthly over a 12 month " \
                     "period "
            print(result.format(p))
        if 5000 > personal_loan <= 75000:
            r = 0.015
            n = 24
            p = personal_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted Monetary Transatlantic, you will be paying {} monthly over a 24 month " \
                     "period "
            print(result.format(p))
        if 75000 > personal_loan <= 100000:
            r = 0.015
            n = 24
            p = personal_loan * (1 - (1 + r) ^ -n) / r
            result = "Your Loan has been granted from Monetary Transatlantic Bank, you will be paying {} monthly over " \
                     "a " \
                     "36 month period "
            print(result.format(p))
        print("Where would you like to deposit this loan")
        print("========== (1). Current ==========")
        print("========== (2). Savings ==========")
        choice = input()
        if choice == "1":
            Transactions.get_personalloan_checking(personal_loan, name)
        if choice == "2":
            Transactions.get_personalloan_Savings(personal_loan, name)

        EmailSender.send_mail_for_personal_loan(email, personal_loan, choice)

    intro()


def BankStatement():
    pin = input("please enter the pin your account is in: ")
    data_current = conn.execute('SELECT Pin, name, Type, Current, Saving, Address, Country, Currency FROM InovClients'
                                'WHERE name=?'[pin])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[1])
        print("Account Type = ", x[2])
        print("Savings Balance = ", x[3])
        print("Current Balance = ", x[4])
        print("Currency held = ", x[7])

    intro()


def Deposit():
    name = input("please enter the full name your account is in: ")
    email = input("please enter email: ")
    Crypt = input("please enter last Six Digits of your DCL: ")
    data_current = conn.execute("SELECT name, Pin FROM customers WHERE DCL Like '%?%'", [Crypt])
    res = data_current.fetchall()
    for x in res:
        print("Account Name = ", x[0])
        print("Account Type = ", x[1])
        print("Savings Balance = ", x[2])
        print("Current Balance = ", x[3])

    print("choose an account to deposit into: ")
    print("========== (1). Current ==========")
    print("========== (2). Savings ==========")
    ans = input()

    if ans == "1":
        dep = int(input("How much would you like to deposit today: "))
        Transactions.enter_deposit_Checking(name, dep)
        print("deposit has been made")
        EmailSender.send_mail_for_deposits_checking(dep, email)

    if ans == "2":
        dep = int(input("How much would you like to deposit today: "))
        Transactions.enter_deposit_Savings(name, dep)
        print("deposit has been made")
        EmailSender.send_mail_for_deposits_saving(dep, email)

    intro()


def OpenAccount():
    while True:
        first_name = str(input('please enter your first name: '))
        last_name = str(input('please enter your last name: '))
        concat = StringIO()
        concat.write(first_name)
        concat.write(last_name)
        Account_name = concat.getvalue()
        email = str(input('please enter an email: '))
        addy = str(input('enter address: '))
        pin = random.randint(11111, 99999)
        c_value = Fernet.generate_key()
        Crypt = c_value
        Country = str(input('What country are you in: '))
        Currency = str(input('What is your currency: '))
        print('What type of account would you like to open: ')
        print('please choose')
        print('Business')
        print('Personal')
        type = str(input())
        current = int(input('How much do you want to deposit into this account p.s. no min deposit required max '
                            'deposit is '
                            '3000: '))
        if current > 3000 or current < 0:
            print("deposit does not meet requirement, try again")
            OpenAccount()
        savings = int(input('How much do you want to deposit into this account p.s. no min deposit required max '
                            'deposit is '
                            '5000: '))
        if savings > 5000 or savings < 0:
            print("deposit does not meet requirement, try again")
            OpenAccount()
        sql = "INSERT INTO InovClients (name, email, Pin, DCL, Type, Current, Saving, Address, Country, Currency) " \
              "VALUES ( " \
              "?, " \
              "?, ?, ?, ?, ?, ?, ?, ?, ?) "
        val = (Account_name, email, pin, Crypt, type, current, savings, addy, Country, Currency)
        db.execute(sql, val)
        db.commit()
        print("Would you like to open another account ? yes/no")
        ans = input()
        if ans == "yes":
            OpenAccount()
        else:
            pinNo = '{}  this is a generated pin number that will be used to manage your account.'
            print(pinNo.format(pin))
            dclNo = '{} this is your secured credit code for your Virtual Credit Card, this will be your main account charged with most ' \
                    'transactions you make.' \
                    'This is to ensure safer payment and Security of your account, Please memorize the last 6 digits.'
            print(dclNo.format(Crypt))

        print("info saved to database")
        print("Account created")

        intro()


def LoginAccount():
    print("welcome")
    n = str(input("please enter name account is in: "))
    pin = int(input("please enter pin: "))
    data_check = conn.execute('SELECT * FROM InovClients WHERE Pin=?, WHERE name=?', [pin, n])
    res = data_check.fetchall()
    for x in res:
        print(x)

    print("choose a letter to move on or quit")
    print("========== (1). Deposit Money ============")
    print("========== (2). Print Bank Statement ============")
    print("========== (3). Loan ============")
    print("========== (4). Send money ============")
    print("========== (5). get new pin ============")
    print("========== (6). ATM ============")
    print("========== (7). Quit ============")
    print("************************************************************")
    let = input()
    if let == "1":
        Deposit()
    if let == "2":
        BankStatement()
    if let == "3":
        Loan()
    if let == "4":
        transactions()
    if let == "5":
        new_pin()
    if let == "6":
        atm()
    if let == "7":
        exit()


def intro():
    print("Welcome to INOV Financials Inc.")
    print("Please select a number from the following")
    print("************************************************************")
    print("========== (1). Open New Account ====================== (6). Send money ============")
    print("========== (2). Login to Account ====================== (7). get new pin ============")
    print("========== (3). Deposit Money ====================== (8). ATM ============")
    print("========== (4). Print Bank Statement ====================== (9). Currency Exchange ============")
    print("========== (5). Loan ====================== (10). Quit ============")
    print("************************************************************")
    letter = input()
    if letter == "1":
        OpenAccount()
    if letter == "2":
        LoginAccount()
    if letter == "3":
        Deposit()
    if letter == "4":
        BankStatement()
    if letter == "5":
        Loan()
    if letter == "6":
        transactions()
    if letter == "7":
        new_pin()
    if letter == "8":
        atm()
    if letter == "9":
        Curr_exchange()
    if letter == "10":
        exit()


if __name__ == '__main__':
    intro()

